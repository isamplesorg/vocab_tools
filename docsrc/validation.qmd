---
title: Vocabulary Validation
engine: knitr
reference-location: margin
---

## Validate a vocabulary

Vocabulary validation checks the structure of the vocabulary graph by applying SHACL rules using the pySHACL library[^modified]. The SHACL rules are located in `vocab_tools/data` and are included with the code when this packae is installed.

^[modified]: The version of pySHACL used here is slightly modified to provide more metrics on rules applied during the validation process. It is retrieved from [github.com/datadavev/pyshacl](https://github.com/datadavev/pyshacl) and is kept in sync with changes from upstream.

Validation is generally performed on a single base or extension vocabulary using the `vocab validate` command with the target vocabulary source file as the only parameter:

```{bash}
#| class-output: bash-stdout
vocab validate --help
```

Applying the rules against a valid vocabulary generates output similar to the following:

```{bash}
#| class-output: bash-stdout
vocab validate example/data/example.ttl
```

If the vocabulary does not conform with the SHACL rules then error messages are emitted. These can sometimes be a bit difficult to dechipher, though the target node mentioned in the error output is a good starting point. This example shows the output when the vocabulary has no top concept (`skos:topConceptOf`):

```{bash}
#| class-output: bash-stdout
vocab validate example/data/example_notop.ttl
```

This example demonstrates output when the vocabulary has no `skos:ConceptScheme`:
```{bash}
#| class-output: bash-stdout
vocab validate example/data/example_noconceptscheme.ttl
```

A vocabulary concept has no `skos:prefLabel`:
```{bash}
#| class-output: bash-stdout
vocab validate example/data/example_nolabel.ttl
```

A vocabulary concept has no `skos:definition`:
```{bash}
#| class-output: bash-stdout
vocab validate example/data/example_nodefinition.ttl
```
